{"version":3,"sources":["SnakeBoard.js","utils.js","Points.js","LeaderBoard.js","App.js","index.js"],"names":["SnakeBoard","points","setPoints","initialRows","i","j","randomPosition","x","Math","floor","random","y","useState","rows","setRows","snake","setSnake","direction","setDirection","food","setFood","intervalId","setIntervalId","isGameOver","setIsGameOver","document","addEventListener","e","keyCode","displayRows","map","row","className","tile","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","useInterval","newSnake","push","head","slice","find","b","checkGameOver","pointsList","JSON","parse","localStorage","getItem","setItem","stringify","window","disparchEvent","Event","forEach","madonPaa","pop","newRows","displaySnake","Points","getSnakePoints","LeaderBoard","setPointsList","sort","a","App","onClick","location","reload","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.49589dc4.chunk.js","sourcesContent":["import React, {useState} from \"react\";\r\nimport {useInterval} from \"./utils\";\r\nimport \"./SnakeBoard.css\";\r\n\r\nconst SnakeBoard = ({points, setPoints}) => {\r\n  const height = 30;\r\n  const width = 30;\r\n  var initialRows = [];\r\n  for (var i = 0; i < height; i++) {\r\n    initialRows[i] = [];\r\n    for (var j = 0; j < width; j++) {\r\n      initialRows[i][j] = \"blank\";\r\n    }\r\n  }\r\n\r\n  const randomPosition = () => {\r\n    const position = {\r\n      x: Math.floor(Math.random() * width),\r\n      y: Math.floor(Math.random() * height)\r\n    };\r\n    return position;\r\n  };\r\n\r\n  const [rows, setRows] = useState(initialRows);\r\n  const [snake, setSnake] = useState([{x: 0, y: 0}]);\r\n  const [direction, setDirection] = useState(\"right\");\r\n  const [food, setFood] = useState(randomPosition);\r\n  const [intervalId, setIntervalId] = useState();\r\n  const [isGameOver, setIsGameOver] = useState(false);\r\n\r\n\r\n\r\nconst changeDirectionWithKeys = (e) => {\r\n  const {keyCode} = e;\r\n  switch(keyCode) {\r\n    case 37:\r\n      setDirection(\"left\");\r\n      break;\r\n    case 38:\r\n      setDirection(\"top\");\r\n      break;\r\n    case 39:\r\n      setDirection(\"right\");\r\n      break;\r\n    case 40:\r\n      setDirection(\"bottom\");\r\n      break;\r\n    default:\r\n    break;\r\n  }\r\n}\r\ndocument.addEventListener(\"keydown\", changeDirectionWithKeys);\r\n\r\n  const displayRows = rows.map((row, i) => (\r\n    <div className=\"Snake-row\" key = {i}>\r\n      {row.map((tile, j) => (\r\n        <div className={`tile ${tile}`} key={'${i}-${j}'} />\r\n      ))}\r\n    </div>\r\n  ));\r\n\r\n  const displaySnake = () => {\r\n    const newRows = initialRows;\r\n    snake.forEach(tile => {\r\n      newRows[tile.x][tile.y] = \"snake\";\r\n    });\r\n    newRows[food.x][food.y] = \"food\";\r\n    setRows(newRows);\r\n  };\r\n\r\nconst checkGameOver = () => {\r\n  const head = snake[0];\r\n  const body = snake.slice(1, -1);\r\n  return body.find(b => b.x === head.x && b.y === head.y);\r\n}\r\n\r\n\r\n  const moveSnake = () => {\r\n    const newSnake = [];\r\n    switch (direction) {\r\n      case \"right\":\r\n        newSnake.push({x: snake[0].x, y: (snake[0].y + 1) % width});\r\n        break;\r\n      case \"left\":\r\n        newSnake.push({x: snake[0].x, y: (snake[0].y - 1 + width) % width});\r\n        break;\r\n      case \"top\":\r\n        newSnake.push({x: (snake[0].x - 1 + height) % height, y: snake[0].y});\r\n        break;\r\n      case \"bottom\":\r\n        newSnake.push({x: (snake[0].x + 1) % height, y: snake[0].y});\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\nif (checkGameOver()) {\r\n  setIsGameOver(true);\r\n  clearInterval(intervalId);\r\n  const pointsList = JSON.parse(localStorage.getItem(\"snake-points\")) || [];\r\n    pointsList.push(points);\r\n    localStorage.setItem(\"snake-points\", JSON.stringify(pointsList));\r\n    window.disparchEvent(new Event(\"storage\"));\r\n}\r\n\r\n\r\n\r\n\r\n        // Lisätään madolle joka askeleella uusi pala,\r\n        // joka poistetaan jos mato ei saa tällä askeleella ruokaa\r\n        snake.forEach(tile => {\r\n          newSnake.push(tile);\r\n        });\r\n        // Tarkistetaan saako mato ruuan kiinni\r\n        const madonPaa = snake[0];\r\n        if (madonPaa.x === food.x && madonPaa.y === food.y) {\r\n          setFood(randomPosition);\r\n          setPoints(points + 1);\r\n        } else {\r\n          newSnake.pop();\r\n        }\r\n\r\n    setSnake(newSnake);\r\n    displaySnake();\r\n  };\r\n\r\n  useInterval(moveSnake, 150, setIntervalId);\r\n\r\n  return(\r\n  <div className=\"Snake-board\">\r\n    {displayRows}\r\n    {isGameOver && <div className=\"Game-over\">Game over!</div>}\r\n  </div>\r\n      );\r\n};\r\n\r\nexport default SnakeBoard;\r\n","import {useEffect, useRef} from \"react\";\r\n/*\r\nJaetaan tämä pätkä oppilaille pastebiniin https://pastebin.com/\r\nThanks Dan Abramov for useInterval hook\r\nhttps://overreacted.io/making-setinterval-declarative-with-react-hooks/\r\nThis useInterval Hook sets up an interval and clears it after unmounting.\r\nIt’s a combo of setInterval and clearInterval tied to the component lifecycle.\r\n*/\r\nexport const useInterval = (callback, delay, setIntervalId) => {\r\n  const savedCallback = useRef();\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      let id = setInterval(tick, delay);\r\n      setIntervalId(id);\r\n      return () => clearInterval(id);\r\n    }\r\n  }, [delay, setIntervalId]);\r\n};\r\n","import React from \"react\";\r\nimport \"./Points.css\"\r\n\r\nconst Points = ({points}) => {\r\n  return <div className=\"Points\">{points} pistettä</div>;\r\n};\r\n\r\nexport default Points;\r\n","import React, {useState} from \"react\";\r\nimport \"./LeaderBoard.css\";\r\n\r\nconst getSnakePoints = () =>\r\n  JSON.parse(localStorage.getItem(\"snake-points\")) || [];\r\n\r\nconst LeaderBoard = () => {\r\n  const [pointsList, setPointsList] = useState(getSnakePoints());\r\n\r\nwindow.addEventListener(\"storage\", () => {\r\n  setPointsList(getSnakePoints());\r\n});\r\n\r\nconst sortedPointsList = pointsList.sort((a,b) => b - a);\r\n\r\n  return (\r\n    <div className=\"LeaderBoard\">\r\n      <div className=\"LeaderBoard-header\">Top 5</div>\r\n      <div className=\"LeaderBoard-points\">pisteet</div>\r\n      { pointsList\r\n        .slice(0, 5)\r\n        .map((points, i) => (\r\n        <div key ={`${points}-${i}`}>{points} pistettä </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LeaderBoard;\r\n","import React, {useState} from \"react\";\nimport \"./App.css\";\nimport SnakeBoard from \"./SnakeBoard\";\nimport Points from \"./Points\";\nimport LeaderBoard from \"./LeaderBoard\";\n\nfunction App() {\n  const [points, setPoints] = useState(0);\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">Matopeli</header>\n      <Points points={points} />\n      <SnakeBoard points={points} setPoints={setPoints} />\n      <button onClick={() => window.location.reload()}>Uusi peli</button>\n      <LeaderBoard />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}